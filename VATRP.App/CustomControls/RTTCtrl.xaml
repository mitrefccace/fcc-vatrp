<!-- 
Copyright © The MITRE Corporation.
 
This program is licensed under the terms of the GNU General Public License Version 2, as published by the Free Software Foundation. This program is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Please see the
GNU General Public License for more details.
 
This program or code contains content developed by The MITRE Corporation. If this program is used in a deployment or embedded within another project, MITRE requests that you send an email to opensource@mitre.org to let us know where and how this program is being used.
 
NOTICE
This (software/technical data) was produced for the U. S. Government under Contract Number HHSM-500-2012-00008I, and is subject to Federal Acquisition Regulation Clause 52.227-14, Rights in Data-General. No other use other than that granted to the U. S. Government, or to those acting on behalf of the U. S. Government under that Clause is authorized without the express written permission of The MITRE Corporation. For further information, please contact The MITRE Corporation, Contracts Management Office, 7515 Colshire Drive, McLean, VA  22102-7539, (703) 983-6000. 
-->

<UserControl
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:properties="clr-namespace:com.vtcsecure.ace.windows.Properties"
			 xmlns:System="clr-namespace:System;assembly=mscorlib"
			 xmlns:conv="clr-namespace:com.vtcsecure.ace.windows.Converters"
			 x:Class="com.vtcsecure.ace.windows.CustomControls.RTTCtrl"
			 mc:Ignorable="d" 
	d:DataContext="{d:DesignData Source=../SampleData/RTTSampleData.xaml}"
			 d:DesignWidth="400" d:DesignHeight="800"
	Width="300"
			 Loaded="OnLoaded"
			 Unloaded="OnUnloaded" 
			 >
    <UserControl.Resources>
        <conv:BoolToVisibilityConverter x:Key="bvc" OppositeBooleanValue="False"/>
        <conv:BoolToBubbleColorConverter x:Key="bcolorc"/>
        <conv:BoolToBubbleCornerConverter x:Key="bcornerc0" Radius="6.0"/>
        <conv:BoolToBubbleCornerConverter x:Key="bcornerc1" Radius="6.0" Row="1"/>
        <conv:MultipleParamsToBubbleMarginConverter x:Key="bmmc"/>
        <conv:DirectionToDateMarginConverter x:Key="bdmc"/>
        <conv:MessageDeliveryStatusToBrushConverter x:Key="mdsb"/>
        <conv:MessageDateConverter x:Key="mdc"/>
        <conv:BoolToBubbleAlignmentConverter x:Key="BtbaText" OppositeBooleanValue="True" />
        <conv:BoolToBubbleAlignmentConverter x:Key="BtbaTime" TrueEquivalent="Right" FalseEquivalent="Left" OppositeBooleanValue="True"/>
        <conv:DirectionToVisibilityConverter x:Key="dvc"/>
        <conv:DirectionToVisibilityConverter x:Key="odvc" OppositeBooleanValue="True"/>
        <conv:DirectionToColumnConverter x:Key="dtc" />
        <conv:DirectionToColumnSpanConverter x:Key="dtcs"/>
        <conv:DirectionToMessageColumnConverter x:Key="dtmc" />
        <conv:DirectionToMarkerColumnConverter x:Key="dtmcc" />

        <Style x:Key = "MessagesListBox1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" >
                <Setter.Value>
                    <StaticResource ResourceKey="AppMainWindowBrush"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="2" 
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" 
                                              Background="{TemplateBinding Background}" 
                                              BorderBrush="Transparent" BorderThickness="0" >
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                            <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FFDB000C" Visibility="Collapsed">
                                <!--<ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" 
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>true</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>-->
                                <!--<Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                    <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                    <Path Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                                </Grid>-->
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RttListboxItem" TargetType="ListBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Padding" Value="3" />
            <Setter Property="Margin" Value="0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor" 
                                                             Storyboard.TargetProperty="Opacity" 
                                                             Duration="0" To=".35"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" 
                                                             Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor2" 
                                                             Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement"
                                                                           Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="fillColor" Opacity="1" Fill="Transparent" IsHitTestVisible="False" 
                                       RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="fillColor2" Opacity="0" Fill="Transparent" IsHitTestVisible="False" 
                                       RadiusX="1" RadiusY="1"/>
                            <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                            <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" 
                                       StrokeThickness="0" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>
    <Grid ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row ="0" Background="{DynamicResource AppMainWindowBrush}" 
				BorderBrush="{DynamicResource AppMainBorderBrush}" 
		   BorderThickness="0,0,0,1">
            <!--ItemsSource= "{Binding MessagesListView}"-->
            <!--ItemsSource= "{Binding TestMessages}"-->
            <ListBox x:Name ="MessageListView" Style="{StaticResource MessagesListBox}" 
				ItemsSource= "{Binding MessagesListView}" Margin="0" 
								 ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
					 ScrollViewer.VerticalScrollBarVisibility="Auto" 
					 IsSynchronizedWithCurrentItem="True"
							 HorizontalContentAlignment="Stretch"
                     ItemContainerStyle="{StaticResource RttListboxItem}"
							 >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Column="0" Grid.Row="0" Margin="0,0,0,3" Grid.ColumnSpan="3" VerticalAlignment="Top"
                                  Visibility="{Binding IsRTTStartMarker, Converter={StaticResource bvc}}">
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Grid.Row="0" Width="26" Height="26" Fill="#FF448e9d">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="../Resources/RTT_start.png" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Border BorderThickness="0,1,1,0" Margin="4,0,0,0" Grid.Column="1" Grid.Row="0" 
                                        BorderBrush="#FF448e9d" >
                                </Border>
                            </Grid>

                            <!-- Date separator -->
                            <!--Margin="{Binding IsRTTMarker, Converter={StaticResource bdmc}}"-->
                            <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" 
                                 x:Name="SeparatorWnd" Visibility="{Binding IsSeparator, Converter={StaticResource bvc}}" 
                                  >

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition Height="2*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Column="0" Grid.Row="0" Margin="4,0,0,0" BorderBrush="#FFF0F0F0" BorderThickness="0,0,0,1"/>
                                <Border Grid.Column="0" Grid.Row="1" Margin="4,0,0,0" BorderThickness="0,1,0,0" BorderBrush="#FFF0F0F0"/>
                                <Border Grid.Column="2" Grid.Row="0" Margin="0,0,4,0" BorderThickness="0,0,0,1" BorderBrush="#FFF0F0F0"/>
                                <Border Grid.Column="2" Grid.Row="1" Margin="0,0,4,0" BorderThickness="0,1,0,0" BorderBrush="#FFF0F0F0"/>
                                <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="0,5" CornerRadius="3" Background="#FFF0F0F0">
                                    <TextBlock Text="{Binding MessageTime, StringFormat=\{0:dd MMMM yyyy\}}" 
                                               FontWeight="Bold" HorizontalAlignment="Center"
                                               Foreground="{StaticResource ChatPageBubbleTextFont}"
                                               ></TextBlock>
                                </Border>
                                <!--<Border Grid.Column="0" Grid.Row="0" BorderThickness="1,0" Grid.ColumnSpan="3" 
                                        Grid.RowSpan="2"
                                        BorderBrush="#FF448e9d" 
                                        Visibility="{Binding IsRTTMarker, Converter={StaticResource bvc}}" 
                                        />-->

                            </Grid>

                            <!-- Message -->
                            <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" 
											HorizontalAlignment="{Binding Direction, Converter={StaticResource BtbaText}}"
									  Visibility="{Binding ShowInList, Converter={StaticResource bvc}}" >
                                  <Grid.Margin>
                                <MultiBinding Converter="{StaticResource bmmc}">
                                    <Binding Path="Direction"/>
                                    <Binding Path="IsRTTMarker"/>
                                </MultiBinding>
                                </Grid.Margin>
                                 
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Width="1"/>
                                <Border Width="26" Height="26" Grid.Column="1"
										Margin="0,0,5,0" VerticalAlignment="Bottom" CornerRadius="13" 
										Background="#FFCCCCCC" BorderThickness="0" 
										Visibility="{Binding Direction, Converter={StaticResource dvc}}">
                                    <TextBlock Text="{Binding Contact.Initials}" 
                                               Foreground="{StaticResource AppMainBorderBrush}" 
                                               FontSize="13" FontWeight="Bold" VerticalAlignment="Center" 
                                               HorizontalAlignment="Center" 
												   DataContext="{Binding Chat}"
													>
                                    </TextBlock>
                                </Border>


                                <Grid Grid.Column="{Binding Direction, Converter={StaticResource dtc}}" 
                                      Grid.ColumnSpan="{Binding Direction, Converter={StaticResource dtcs}}"
									  HorizontalAlignment="{Binding Direction, Converter={StaticResourceExtension BtbaText}}"
									  Visibility="{Binding ShowInList, Converter={StaticResource bvc}}" 
									  
									  >
                                    <Grid >
                                        <Grid.RowDefinitions>

                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="9"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="9"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Row="0" Grid.Column="{Binding Direction, Converter={StaticResource dtmc}}" 
                                                Grid.ColumnSpan="4" 
												BorderBrush="{Binding Direction, Converter={StaticResource bcolorc}}" 
													BorderThickness="0" 
											Background="{Binding Direction, Converter={StaticResource bcolorc}}" 
											CornerRadius="{Binding Direction, Converter={StaticResource bcornerc0}}" 
												>
                                            <!--Text part-->
                                            <StackPanel HorizontalAlignment="Stretch" >
                                                <TextBlock  Text="{Binding Content}" 
								Margin="5,0,5,0" TextWrapping="Wrap"
                                 FontFamily="{Binding Chat.MessageFont}"
								Foreground="{StaticResource ChatPageBubbleTextFont}"
								FontSize="{Binding Chat.MessageFontSize}" 
								  VerticalAlignment="Top"/>
                                            </StackPanel>
                                        </Border>
                                        <Rectangle Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" 
                                                   VerticalAlignment="Bottom" Width="25" Height="16" 
                                                   HorizontalAlignment="Left"
												   Fill="{Binding Direction, Converter={StaticResource bcolorc}}"  
												   Visibility="{Binding Direction, Converter={StaticResource dvc}}">
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="..\Resources\arrow_left.png" ></ImageBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <Rectangle Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2" 
												   VerticalAlignment="Bottom" Width="25" Height="16" 
												   HorizontalAlignment="Right" Margin="0,0,0,0"
												   Fill="{Binding Direction, Converter={StaticResource bcolorc}}"  
												   Visibility="{Binding Direction, Converter={StaticResource odvc}}" >
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="..\Resources\arrow_right.png" ></ImageBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>

                                        <!--Date/Time-->
                                        <Border Grid.Row="1" Grid.Column="{Binding Direction, Converter={StaticResource dtmc}}" 
                Grid.ColumnSpan="4"
                BorderBrush="{Binding Direction, Converter={StaticResource bcolorc}}" 
													BorderThickness="0" 
											Background="{Binding Direction, Converter={StaticResource bcolorc}}" 
											CornerRadius="{Binding Direction, Converter={StaticResource bcornerc1}}" >
                                            <StackPanel Orientation="Horizontal" Margin="5,5,5,5" 
                                            HorizontalAlignment="{Binding Direction, Converter={StaticResource BtbaTime}}">
                                                <TextBlock Text="{Binding MessageTime, Converter={StaticResource mdc}}" 
								Foreground="{StaticResource ChatPageBubbleDateFont}" 
								 FontSize="11"/>
                                                <Ellipse Width="10" Height="10" 
														 Fill="{Binding Status, Converter={StaticResource mdsb}}" Margin="8,2,8,0" Visibility="{Binding HasDeliveryStatus, Converter={StaticResource bvc}}"/>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </Grid>

                                <Border Width="26" Height="26" Grid.Column="3"
										Margin="5,5,5,0" VerticalAlignment="Bottom" CornerRadius="13" 
										Background="#FFCCCCCC" BorderThickness="0" 
										Visibility="{Binding Direction, Converter={StaticResource odvc}}">
                                    <TextBlock Text="{Binding LoggedContact.Initials}" 
                                               Foreground="{StaticResource AppMainBorderBrush}" FontSize="13" 
                                               FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" 
												   DataContext="{Binding Chat}"
													>
                                    </TextBlock>
                                </Border>
                                <TextBlock Grid.Column="4" Width="1"/>
                            </Grid>

                            <!--<Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" BorderThickness="1,0" Grid.ColumnSpan="3" 
                                        BorderBrush="#FF448e9d" 
                                    Visibility="{Binding ShowRTTMarker, Converter={StaticResource bvc}}" 
                                        />
                            <Border Grid.Row="2" Grid.Column="{Binding Direction, Converter={StaticResource dtmcc}}" 
                                    BorderThickness="0,0,0,1" Margin="0,0,0,15" Width="5"  
                                        BorderBrush="#FF448e9d" 
                                    Visibility="{Binding ShowRTTMarker, Converter={StaticResource bvc}}" 
                                        />-->

                            <!--End Marker-->
                            <Grid Column="1" Grid.Row="3" 
                                  Margin="0,3,0,0"
                                  Visibility="{Binding IsRTTEndMarker, Converter={StaticResource bvc}}" VerticalAlignment="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderThickness="1,0,0,1" Margin="0" Grid.Column="0" BorderBrush="#FF448e9d" 
                                        ></Border>
                                <Rectangle Grid.Column="1" Width="22" Height="22" Fill="#FF448e9d">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="../Resources/RTT_end.png" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>
        <Border Grid.Row ="1" Background="{StaticResource AppMainWindowBrush}" BorderBrush="{StaticResource AppMainBorderBrush}" 
		   BorderThickness="0,0,0,1">
            <Grid Visibility="Visible">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid Style="{StaticResource HintEntryFieldStyle}" Margin="0" 
                      Background="{StaticResource AppMainWindowBrush}" Grid.Column="0"
                      Visibility="{Binding RTTEnabled, Converter={StaticResource bvc}}">
                    <TextBlock Text="Message" Foreground="{StaticResource ChatPageComposeHintFont}" 
                               FontSize="9" VerticalAlignment="Center" 
							   HorizontalAlignment="Left" Margin="10,0,0,0"
					           Visibility="{Binding ShowMessageHint, Converter={StaticResource bvc}}" />

                    <TextBox x:Name="MessageTextBox" BorderThickness="0" Height="40" TextAlignment="Left" FontSize="18"
									Foreground="{StaticResource AppMainBorderBrush}" CaretBrush="{StaticResource AppMainBorderBrush}"
								    HorizontalAlignment="Stretch"  
									VerticalContentAlignment="Center"
									Background="Transparent" PreviewKeyDown="OnPreviewKeyDown" 
                                    PreviewTextInput="OnTextInput"
                                    Text="{Binding MessageText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </Grid>
        </Border>
        <Border Grid.Row="2" Background="{StaticResource AppMainWindowBrush}" BorderBrush="{StaticResource AppMainBorderBrush}" 
		   BorderThickness="0,0,0,1">
            <Grid>
            <ComboBox  Height="50" Margin="30, 0" SelectedItem="{Binding SelectedTextSendMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  ItemContainerStyle="{StaticResource TextSendModeComboBoxItemStyle}"
          ItemsSource="{Binding TextSendModes}" Style="{StaticResource TextSendModeComboStyle}" 
                  Background="{StaticResource AppMainWindowBrush}" 
                  Foreground="{StaticResource AppMainBorderBrush}" Visibility="Collapsed"
                  >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                           <TextBlock Text="{Binding}" FontSize="16" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
                <Grid Name="ButtonGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Height="50" Margin="0,0,60,0" Grid.Column="0" Background="{StaticResource AppMainWindowBrush}"  
						        BorderThickness="0" 
                                Click="OnSendButtonClicked"
                                IsEnabled="{Binding RTTEnabled}"
                                Visibility="Visible" 
                                Cursor="Hand">
                        <Button.Resources>
                            <StackPanel x:Key="SendButtonNormal" VerticalAlignment="Center" HorizontalAlignment="Center"  
                                            Orientation="Horizontal">
                                <Rectangle Margin="5,0,10,0" Width="25" Height="25" Fill="{DynamicResource AppMainBorderBrush}" VerticalAlignment="Center">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="..\Resources\send_message.png" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Text="{Binding SendButtonTitle}" HorizontalAlignment="Left" 
                                           FontSize="28" 
                                           VerticalAlignment="Center" Margin ="0,-3,0,0" 
                                   Foreground="{DynamicResource AppMainBorderBrush}"/>
                            </StackPanel>
                        </Button.Resources>

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="Content" Value="{StaticResource SendButtonNormal}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid Background="Transparent">
                                                <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                    <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Content" Value="{DynamicResource SendButtonNormal}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Content" Value="{DynamicResource SendButtonNormal}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                                        </MultiDataTrigger.Conditions>

                                        <Setter Property="Opacity" Value="0.7"/>
                                        <Setter Property="Content" Value="{DynamicResource SendButtonNormal}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ToggleButton Grid.Column="1" Height="50" Margin="20,0,10,0" 
                            Visibility="Visible" 
                            Cursor="Hand" 
                            IsChecked="{Binding ToggleChecked}"
                            Background="{StaticResource AppMainWindowBrush}"
                            Command="{Binding MuteTextCommand}">
                        <ToggleButton.Resources>
                            <Grid x:Key="MuteButtonNormal">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Rectangle Grid.Row="0" Margin="5,0,5,0" Width="50" Height="50" Fill="{StaticResource AppMainBorderBrush}" VerticalAlignment="Center">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="..\Resources\mute_keys_off.png" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                            <Grid x:Key="MutePressed">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Rectangle Grid.Row="0" Margin="5,0,5,0" Width="50" Height="50" Fill="{StaticResource CallBarPressedBg}"></Rectangle>
                                <Rectangle Grid.Row="0" Margin="5,0,5,0" Width="50" Height="50" Fill="{StaticResource AppMainBorderBrush}" VerticalAlignment="Center">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="..\Resources\mute_keys_on.png" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </ToggleButton.Resources>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Margin" Value="1,0" />
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Content" Value="{StaticResource MuteButtonNormal}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid Background="Transparent">
                                                <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                                                    <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Opacity" Value="0.8" />
                                        <Setter Property="Content" Value="{StaticResource MutePressed}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Opacity" Value="0.9"/>
                                        <Setter Property="Content" Value="{StaticResource MutePressed}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
