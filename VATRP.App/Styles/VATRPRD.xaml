<!-- 
Copyright © The MITRE Corporation.
 
This program is licensed under the terms of the GNU General Public License Version 2, as published by the Free Software Foundation. This program is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Please see the
GNU General Public License for more details.
 
This program or code contains content developed by The MITRE Corporation. If this program is used in a deployment or embedded within another project, MITRE requests that you send an email to opensource@mitre.org to let us know where and how this program is being used.
 
NOTICE
This (software/technical data) was produced for the U. S. Government under Contract Number HHSM-500-2012-00008I, and is subject to Federal Acquisition Regulation Clause 52.227-14, Rights in Data-General. No other use other than that granted to the U. S. Government, or to those acting on behalf of the U. S. Government under that Clause is authorized without the express written permission of The MITRE Corporation. For further information, please contact The MITRE Corporation, Contracts Management Office, 7515 Colshire Drive, McLean, VA  22102-7539, (703) 983-6000. 
-->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush x:Key="AppMainWindowBrush" Color ="#FF2C373D"/>
    <SolidColorBrush x:Key="AppMainBorderBrush" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ScreenBrush" Color="#FFb0b0b0"/>

    <SolidColorBrush x:Key="DisabledCallButtonBackBrush" Color="#ff90e191"/>
    <SolidColorBrush x:Key="DisabledCallButtonForeBrush" Color="#ff7f7f7f"/>

    <SolidColorBrush x:Key="DisabledSaveButtonBackBrush" Color="#ffb9de8e"/>
    <SolidColorBrush x:Key="DisabledSaveButtonForeBrush" Color="#ff7f7f7f"/>

    <SolidColorBrush x:Key="DialButtonNormalBrush" Color="#FFE4F2F5" />

    <SolidColorBrush x:Key="DisabledCallPageButton" Color="#FF9d9d9d" />
    <SolidColorBrush x:Key="DialpadNormalBrush" Color="#ffc2c2c2" />
    <SolidColorBrush x:Key="DialpadHoverBrush" Color="#ffa7a7a7" />

    <SolidColorBrush x:Key="DialbuttonClickedBrush" Color="#FF3D7682" />
    <SolidColorBrush x:Key="MarkerBrush" Color="#FF202020" />

    <SolidColorBrush x:Key="AcceptButtonNormalBrush" Color="#ff3fbe3f"/>
    <SolidColorBrush x:Key="AcceptButtonClickedBrush" Color="#ff1fb4ff"/>
    <SolidColorBrush x:Key="CallBarNormalBg" Color="#FF5C7584"/>
    <SolidColorBrush x:Key="CallBarPressedBg" Color="#FFbe3f3f"/>
    <SolidColorBrush x:Key="CallBarEndCallBg" Color="#FFbe3f3f"/>

    <SolidColorBrush x:Key="NavigationBarBg" Color ="#FF2C373D"/>
    <SolidColorBrush x:Key="NavigationBarNormalButtonBg" Color ="#FF2C373D"/>
    <SolidColorBrush x:Key="NavigationBarNormalButtonFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="NavigationBarPressedButtonBg" Color ="#FFff6100"/>
    <SolidColorBrush x:Key="NavigationBarPressedButtonFont" Color ="#FFFFFFFF"/>

    <SolidColorBrush x:Key="DeclineMessageBg" Color ="#FFEA7F3A"/>
    
    <SolidColorBrush x:Key="DialpadPageBackButtonNormalFont" Color ="#FFb9ecff"/>
    <SolidColorBrush x:Key="DialpadPageBackButtonXNormalFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialpadPageBackButtonPressedFont" Color ="#FFb9ecff"/>
    <SolidColorBrush x:Key="DialpadPageBackButtonXPressed" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialpadPageRemotePartyFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialpadPageNormalKeyButtonBg" Color ="#FF2C373D"/>
    <SolidColorBrush x:Key="DialpadPagePressedKeyButtonBg" Color ="#FF5a7380"/>
    <SolidColorBrush x:Key="DialpadPageDisabledKeyButtonBg" Color ="#FFe4f2f5"/>
    <SolidColorBrush x:Key="DialpadPageKeyButtonNormalTextFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialpadPageKeyButtonDisabledTextFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialpadMakeCallButtonBg" Color ="#FF2B912D"/>

    <SolidColorBrush x:Key="RecentsPageMainBg" Color ="#FFE9EFE9"/>
    <SolidColorBrush x:Key="RecentsPageControlBg" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RecentsPageActiveTabFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="RecentsPageActiveTabBg" Color ="#FF88FF00"/>
    <SolidColorBrush x:Key="RecentsPageInactiveTabFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="RecentsPageInactiveTabBg" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RecentsPageCallerFont" Color ="#FF2c373d"/>
    <SolidColorBrush x:Key="RecentsPageDateFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="RecentsPageMissedFont" Color ="#FF00A8E6"/>
    <SolidColorBrush x:Key="RecentsPageCostFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="RecentsPageDurationFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="RecentsPageSearchTextboxBorder" Color ="#FFc6c6c6"/>
    <SolidColorBrush x:Key="RecentsPageHeaderBg" Color ="#FFDBDBDB"/>
    <SolidColorBrush x:Key="RecentsPageSearchHintFont" Color ="#FFDBDBDB"/>
    <SolidColorBrush x:Key="RecentsPageSearchTextboxFont" Color ="#FF000000"/>

    <SolidColorBrush x:Key="KeyPageButtonNormalFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="KeyPageButtonPressedFont" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="KeyPageButtonNormalBg" Color ="#FF2C373D"/>
    <SolidColorBrush x:Key="KeyPageButtonPressedBg" Color ="#FF5a7380"/>
    <SolidColorBrush x:Key="KeyPageBg" Color ="#FFFFFFFF"/>

    <SolidColorBrush x:Key="ChatPageTitleFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageMainBg" Color ="#FFE2E2E2"/>
    <SolidColorBrush x:Key="ChatPageControlBg" Color ="#FFe3e3e3"/>
    <SolidColorBrush x:Key="ChatPageContactNameFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageSentBubbleBg" Color ="#FFEDEDED"/>
    <SolidColorBrush x:Key="ChatPageSentBubbleBorder" Color ="#FFEDEDED"/>
    <SolidColorBrush x:Key="ChatPageBubbleTextFont" Color ="#FF555555"/>
    <SolidColorBrush x:Key="ChatPageBubbleDateFont" Color ="#FF555555"/>
    <SolidColorBrush x:Key="ChatPageBubbleSuccessFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageBubbleFailureFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageReceivedBubbleBg" Color ="#FFF9D1C8"/>
    <SolidColorBrush x:Key="ChatPagereceivedBubbleBorder" Color ="#FFD5C0BB"/>
    <SolidColorBrush x:Key="ChatPageComposeBubbleBg" Color ="#FFE3E3E3"/>
    <SolidColorBrush x:Key="ChatPageComposeBubbleBorder" Color ="#FFE3E3E3"/>
    <SolidColorBrush x:Key="ChatPageComposeTextboxBg" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ChatPageComposeTextboxFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageComposeHintFont" Color ="#FFDDDDDD"/>
    <SolidColorBrush x:Key="ChatPageComposeHintBg" Color ="#FFCACACA"/>
    <SolidColorBrush x:Key="ChatPageNormalSelContactFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPagePressedSelContactFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageSelContactNameFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageSelContactNumberFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageCounterFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageNormalSelContactBg" Color ="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ChatPagePressedSelContactBg" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPagePressedToLabelFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageBackButtonNormalBg" Color ="#FF545454"/>
    <SolidColorBrush x:Key="ChatPageBackButtonPressedBg" Color ="#FFFF5F00"/>
    <SolidColorBrush x:Key="ChatPageSendButtonNormalBg" Color ="#FFffffff"/>
    <SolidColorBrush x:Key="ChatPageSendButtonNormalFont" Color ="#FF828282"/>
    <SolidColorBrush x:Key="ChatPageSendButtonPressedFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageSendButtonPressedBg" Color ="#FFffffff"/>
    <SolidColorBrush x:Key="ChatPageSelectContactTextFont" Color ="#FF000000"/>
    <SolidColorBrush x:Key="ChatPageSelectContactTextBorder" Color ="#FFc6c6c6"/>
    <SolidColorBrush x:Key="ChatPageSendButtonBorder" Color ="#FFc6c6c6"/>

    <Style x:Key="VATRPTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#ff000000" />
    </Style>

    <Style x:Key="VATRPTitleStyle" BasedOn="{StaticResource VATRPTextStyle}" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style x:Key="VATRPGroupTitleStyle" BasedOn="{StaticResource VATRPTextStyle}" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    
    <Style x:Key="VATRPEditStyle"  TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFAAAAAA" />
    </Style>

    <Style x:Key="VATRPPasswordStyle"  TargetType="PasswordBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFaaaaaa" />

    </Style>
    <SolidColorBrush x:Key="RadiusBorderBackgroundColor" Color="#FFf8f8f8"/>
    
    <Style x:Key="DialpadHover" TargetType="{x:Type Button}">
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Background" Value="{StaticResource DialpadPageNormalKeyButtonBg}" />
        <Setter Property="Foreground" Value="{StaticResource DialpadPageKeyButtonNormalTextFont}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DialpadPagePressedKeyButtonBg}"/>
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Background" Value="{StaticResource DialpadPageNormalKeyButtonBg}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True" >
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Background" Value="{StaticResource DialpadPagePressedKeyButtonBg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DialpadAudioCallHover" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FF0d6e0f" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF0D830F"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True" >
                <Setter Property="Background" Value="#FF145B15"/>
            </Trigger>
        </Style.Triggers>
    </Style>

   
    <!--Region button sound-->
    <Style x:Key="KeypadButtonStyle" TargetType="{x:Type Button}" 
           BasedOn="{StaticResource DialpadHover}">
    </Style>
   

    <!---->
        
        <Style x:Key="RoundButtonTemplateLeft" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7,0,0,7" Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundButtonTemplateRight" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0,7,7,0" Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundButtonTemplate" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7,7,7,7" Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundButtonTemplateGeneral" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonHover" TargetType="StackPanel">
            <Setter Property="Background" Value="#676767" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel,AncestorLevel=1}, Path=IsMouseOver}" Value="True" >
                    <Setter Property="Background" Value="#808080" />
                </DataTrigger>
                
            </Style.Triggers>
        </Style>
        <Style x:Key="AddContactsButtonHover" TargetType="StackPanel">
            
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel,AncestorLevel=1}, Path=IsMouseOver}" Value="True" >
                    <Setter Property="Background" Value="#808080" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
         <Style x:Key="FlatButtonStyle" TargetType="Button">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        
                        <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="0">
                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
       </Style>
    
    <Style x:Key="HintEntryFieldStyle" TargetType="Grid" >
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="3" />
        </Style>
  
    <Style x:Key="VATRPBox" TargetType="CheckBox">
               <Setter Property="SnapsToDevicePixels" Value="False" />
               <Setter Property="OverridesDefaultStyle" Value="true" />
               <Setter Property="FocusVisualStyle" Value="{x:Null}" />
               <Setter Property="BorderBrush" Value="#ff666666" />
               <Setter Property="Template">
                   <Setter.Value>
                       <ControlTemplate TargetType="CheckBox">
                           <BulletDecorator Background="Transparent">
                              <BulletDecorator.Bullet>
                                  <Border x:Name="Border"
                                          Width="20"
                                          Height="20"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="2"
                                          ClipToBounds="True">
                                      <!--<Border.Effect>
                                          <DropShadowEffect BlurRadius="5" ShadowDepth="2" />
                                      </Border.Effect>-->
                                      <Path x:Name="CheckMark"
                                            Width="10"
                                            Height="10"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 8 8 M 0 8 L 8 0"
                                            Stretch="Fill"
                                            Stroke="#ff666666"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="2" />
                                  </Border>
                              </BulletDecorator.Bullet>
                              <ContentPresenter Margin="4,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True" />
                          </BulletDecorator>
                          <ControlTemplate.Triggers>
                              <Trigger Property="IsChecked" Value="false">
                                  <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                              </Trigger>
                              <Trigger Property="IsFocused" Value="true">
            <Setter Property="BorderBrush" Value="Gray" />
                              </Trigger>
                              <Trigger Property="IsEnabled" Value="false">
                                  <Setter Property="BorderBrush" Value="Gray" />
            <Setter TargetName="CheckMark" Property="Stroke" Value="#ff666666" />
                              </Trigger>
                          </ControlTemplate.Triggers>
                      </ControlTemplate>
                  </Setter.Value>
              </Setter>
          </Style>

        <Style x:Key="VATRPTabStyle" TargetType="TabControl">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FF949494" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TabPanel x:Name="HeaderPanel"
                    Grid.Row="0"
                    Panel.ZIndex="1"
                    Margin="0,0,4,-1"
                    IsItemsHost="True"
                    KeyboardNavigation.TabIndex="1"
                    Background="Transparent" />
                            <Border x:Name="Border"
                  Grid.Row="1"
                  BorderThickness="1,1,1,0"
                  CornerRadius="0"
                  KeyboardNavigation.TabNavigation="Local"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabIndex="2" 
                                    Background="White"
                                    >
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#FF949494"/>
                                </Border.BorderBrush>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                              Margin="2"
                              ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid >
                            <Border Name="tiBorder" Margin="0,1,1,0" BorderThickness="1,1,1,0" BorderBrush="#FF949494" CornerRadius="3,3,0,0">
                                <TextBlock HorizontalAlignment="Center" 
                                       Name="TextBlock" 
                                       Foreground="#FF4c4c4c">
                                <ContentPresenter ContentSource="Header" 
                                                  Margin="20,0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  TextBlock.FontSize="18"/>
                                </TextBlock>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100"/>
                                <Setter TargetName="tiBorder" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="tiBorder" Property="BorderThickness" Value="0"/>
                                <Setter TargetName="TextBlock" Property="Foreground" Value="#FFAAAAAA" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <Style x:Key="ProviderComboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Border
                          x:Name="Border"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="0" />
                                                    <Path
                          x:Name="Arrow"
                          Visibility="Collapsed"
                          Fill="{TemplateBinding Foreground}"
                          Stroke="{TemplateBinding Foreground}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                        <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1"
                                        BorderBrush="White"/>
                                <ScrollViewer Margin="1,2,1,1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="110"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="DialpadProviderComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                                  Name="Border"
                                    Padding="5"
                                    Margin="1"
                                    BorderThickness="1"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent" >

                        <TextBlock TextAlignment="Center">
                                        <ContentPresenter HorizontalAlignment="Center"/>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AppMainBorderBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource AppMainWindowBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContactProviderComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                                  Name="Border"
                                    Padding="5"
                                    Margin="1"
                                    BorderThickness="1"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent" >

                        <TextBlock TextAlignment="Center">
                                        <ContentPresenter HorizontalAlignment="Center"/>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AppMainWindowBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource AppMainBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextSendModeComboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Border
                          x:Name="Border"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="0" />
                                                    <Path
                          x:Name="Arrow"
                          Visibility="Visible"
                          Fill="{TemplateBinding Foreground}"
                          Stroke="{TemplateBinding Foreground}"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" 
                                Opacity="0"
                            />
                        <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1"
                                        BorderBrush="White"/>
                                <ScrollViewer Margin="1,2,1,1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="110"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextSendModeComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                                  Name="Border"
                                    Padding="5"
                                    Margin="1"
                                    BorderThickness="1"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource AppMainBorderBrush}" >

                        <TextBlock TextAlignment="Left">
                                        <ContentPresenter HorizontalAlignment="Left"/>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AppMainBorderBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource AppMainWindowBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>